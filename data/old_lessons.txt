


    # ================================================ lesson 13.1 ===

    csv_file = "../data/transactions.csv"
    xlsx_file = "../data/transactions_excel.xlsx"

    df = reading_file_csv_or_xlsx(xlsx_file)

    print(f"Количество строк, столбцов: {df.shape}\n")  # — выводит размер таблицы;
    print(f"Пример содержимого файла:\n {df.head()}")   # — выводит первые несколько строк таблицы;
    print(f"Статистическая информация:\n {df.describe()}")  # — выводит основную статистическую информацию по таблице;
    print(f"Уникальные значения в столбце:\n{df.value_counts()}")  # — выводит количество уникальных значений в столбце;


"""
    print(df.map())         # — применяет функцию к каждому элементу списка;
    print(df.sort_values()) # — сортирует данные в таблице;
    print(df.agg())         # — агрегирует данные по нескольким столбцам;
    print(df.groupby())     # — группирует данные по определенным критериям;
"""

# ================================================ lesson 12.1

file_path = "../data/operations.json"
transactions = read_financial_transactions(file_path)
# print(transactions)
result = checking_currency(transactions)
# print(result)
print(round(result["result"], 2))



# ================================================ lesson 11.2

#     @log(filename="mylog.txt")
#     def my_function(x, y):
#         return x / y
#
#     print(my_function(2, 2))
#     print(my_function(1, 0))



# ================================================ lesson 10.1

# data_list = [
#     {"id": 41428829, "state": "EXECUTED", "date": "2019-07-03T18:35:29.512364"},
#     {"id": 939719570, "state": "EXECUTED", "date": "2018-06-30T02:08:58.425572"},
#     {"id": 594226727, "state": "CANCELED", "date": "2018-09-12T21:27:25.241689"},
#     {"id": 615064591, "state": "CANCELED", "date": "2018-10-14T08:21:33.419441"},
# ]
#
# filtered_data = filter_by_state(data_list, state="CANCELED")
# print(f"Сортировка по статусу операции:\n{filtered_data}")
#
# sorted_date = sort_by_date(data_list, ascending=False)
# print(f"Сортировка по дате:\n{sorted_date}")



# ================================================ lesson 9.2

# user_info = str(input("Введите данные Вашей карты или счета:\n"))
# print(mask_account_card(user_info))
#
# operation_date = str(input("Введите дату операции:\n"))
# print(get_data(operation_date))



# ================================================ lesson 9.1
# from src.masks import get_mask_account, get_mask_card_number

number_card = get_mask_card_number("1111222233334444")
print(f"Функция маскировки номера карты: " + number_card)

mask_account = get_mask_account("4444555566667777")
print(f"Функция маскировки номера счета: " + mask_account)


# ==========================================================================================

    # transactions = [
    #     {
    #         "id": 939719570,
    #         "state": "EXECUTED",
    #         "date": "2018-06-30T02:08:58.425572",
    #         "operationAmount": {"amount": "9824.07", "currency": {"name": "USD", "code": "USD"}},
    #         "description": "Перевод организации",
    #         "from": "Счет 75106830613657916952",
    #         "to": "Счет 11776614605963066702",
    #     },
    #     {
    #         "id": 142264268,
    #         "state": "EXECUTED",
    #         "date": "2019-04-04T23:20:05.206878",
    #         "operationAmount": {"amount": "79114.93", "currency": {"name": "USD", "code": "USD"}},
    #         "description": "Перевод со счета на счет",
    #         "from": "Счет 19708645243227258542",
    #         "to": "Счет 75651667383060284188",
    #     },
    #     {
    #         "id": 873106923,
    #         "state": "EXECUTED",
    #         "date": "2019-03-23T01:09:46.296404",
    #         "operationAmount": {"amount": "43318.34", "currency": {"name": "руб.", "code": "RUB"}},
    #         "description": "Перевод со счета на счет",
    #         "from": "Счет 44812258784861134719",
    #         "to": "Счет 74489636417521191160",
    #     },
    #     {
    #         "id": 895315941,
    #         "state": "EXECUTED",
    #         "date": "2018-08-19T04:27:37.904916",
    #         "operationAmount": {"amount": "56883.54", "currency": {"name": "USD", "code": "USD"}},
    #         "description": "Перевод с карты на карту",
    #         "from": "Visa Classic 6831982476737658",
    #         "to": "Visa Platinum 8990922113665229",
    #     },
    #     {
    #         "id": 594226727,
    #         "state": "CANCELED",
    #         "date": "2018-09-12T21:27:25.241689",
    #         "operationAmount": {"amount": "67314.70", "currency": {"name": "руб.", "code": "RUB"}},
    #         "description": "Перевод организации",
    #         "from": "Visa Platinum 1246377376343588",
    #         "to": "Счет 14211924144426031657",
    #     },
    # ]
    #
    # usd_transactions = filter_by_currency(transactions, "USD")
    # descriptions = transaction_descriptions(transactions)
    #
    # for element in range(3):
    #     print(next(usd_transactions)["id"])
    #     print(next(descriptions))
    #
    # for card_number in card_number_generator(1, 10):
    #     print(card_number)